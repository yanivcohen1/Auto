//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AutomationModel", "FK_BRAND_LANGUAGE_BRAND", "BRAND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WH_MAIN_Service.BRAND), "BRAND_LANGUAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WH_MAIN_Service.BRAND_LANGUAGE), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_BRAND_LANGUAGE_CURRENCY", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WH_MAIN_Service.CURRENCY), "BRAND_LANGUAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WH_MAIN_Service.BRAND_LANGUAGE), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_BRAND_LANGUAGE_LANGUAGE", "LANGUAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WH_MAIN_Service.LANGUAGE), "BRAND_LANGUAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WH_MAIN_Service.BRAND_LANGUAGE), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_NOTIFICATION_BRAND_LANGUAGE", "BRAND_LANGUAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WH_MAIN_Service.BRAND_LANGUAGE), "NOTIFICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WH_MAIN_Service.NOTIFICATION), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_NOTIFICATION_USER", "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WH_MAIN_Service.USER), "NOTIFICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WH_MAIN_Service.NOTIFICATION), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_BRAND_LANGUAGE_NOTIFICATION", "NOTIFICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WH_MAIN_Service.NOTIFICATION), "BRAND_LANGUAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WH_MAIN_Service.BRAND_LANGUAGE), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_Tool_BRAND_LANGUAGE", "BRAND_LANGUAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WH_MAIN_Service.BRAND_LANGUAGE), "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WH_MAIN_Service.Tool), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_LANGUAGE_CURRENCY", "CURRENCY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WH_MAIN_Service.CURRENCY), "LANGUAGE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WH_MAIN_Service.LANGUAGE), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_BrandsResult_BRAND1", "BRAND", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WH_MAIN_Service.BRAND), "BrandsResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WH_MAIN_Service.BrandsResult), true)]
[assembly: EdmRelationshipAttribute("AutomationModel", "FK_TOOL_RESULT_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WH_MAIN_Service.Tool), "TOOL_RESULT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WH_MAIN_Service.TOOL_RESULT), true)]

#endregion

namespace WH_MAIN_Service
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AutomationEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AutomationEntities1 object using the connection string found in the 'AutomationEntities1' section of the application configuration file.
        /// </summary>
        public AutomationEntities1() : base("name=AutomationEntities1", "AutomationEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutomationEntities1 object.
        /// </summary>
        public AutomationEntities1(string connectionString) : base(connectionString, "AutomationEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutomationEntities1 object.
        /// </summary>
        public AutomationEntities1(EntityConnection connection) : base(connection, "AutomationEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BRAND> BRAND
        {
            get
            {
                if ((_BRAND == null))
                {
                    _BRAND = base.CreateObjectSet<BRAND>("BRAND");
                }
                return _BRAND;
            }
        }
        private ObjectSet<BRAND> _BRAND;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BRAND_LANGUAGE> BRAND_LANGUAGE
        {
            get
            {
                if ((_BRAND_LANGUAGE == null))
                {
                    _BRAND_LANGUAGE = base.CreateObjectSet<BRAND_LANGUAGE>("BRAND_LANGUAGE");
                }
                return _BRAND_LANGUAGE;
            }
        }
        private ObjectSet<BRAND_LANGUAGE> _BRAND_LANGUAGE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CURRENCY> CURRENCY
        {
            get
            {
                if ((_CURRENCY == null))
                {
                    _CURRENCY = base.CreateObjectSet<CURRENCY>("CURRENCY");
                }
                return _CURRENCY;
            }
        }
        private ObjectSet<CURRENCY> _CURRENCY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LANGUAGE> LANGUAGE
        {
            get
            {
                if ((_LANGUAGE == null))
                {
                    _LANGUAGE = base.CreateObjectSet<LANGUAGE>("LANGUAGE");
                }
                return _LANGUAGE;
            }
        }
        private ObjectSet<LANGUAGE> _LANGUAGE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NOTIFICATION> NOTIFICATION
        {
            get
            {
                if ((_NOTIFICATION == null))
                {
                    _NOTIFICATION = base.CreateObjectSet<NOTIFICATION>("NOTIFICATION");
                }
                return _NOTIFICATION;
            }
        }
        private ObjectSet<NOTIFICATION> _NOTIFICATION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<USER> USER
        {
            get
            {
                if ((_USER == null))
                {
                    _USER = base.CreateObjectSet<USER>("USER");
                }
                return _USER;
            }
        }
        private ObjectSet<USER> _USER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tool> Tool
        {
            get
            {
                if ((_Tool == null))
                {
                    _Tool = base.CreateObjectSet<Tool>("Tool");
                }
                return _Tool;
            }
        }
        private ObjectSet<Tool> _Tool;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandsResult> BrandsResult
        {
            get
            {
                if ((_BrandsResult == null))
                {
                    _BrandsResult = base.CreateObjectSet<BrandsResult>("BrandsResult");
                }
                return _BrandsResult;
            }
        }
        private ObjectSet<BrandsResult> _BrandsResult;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TOOL_RESULT> TOOL_RESULT
        {
            get
            {
                if ((_TOOL_RESULT == null))
                {
                    _TOOL_RESULT = base.CreateObjectSet<TOOL_RESULT>("TOOL_RESULT");
                }
                return _TOOL_RESULT;
            }
        }
        private ObjectSet<TOOL_RESULT> _TOOL_RESULT;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BRAND EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBRAND(BRAND bRAND)
        {
            base.AddObject("BRAND", bRAND);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BRAND_LANGUAGE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBRAND_LANGUAGE(BRAND_LANGUAGE bRAND_LANGUAGE)
        {
            base.AddObject("BRAND_LANGUAGE", bRAND_LANGUAGE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CURRENCY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCURRENCY(CURRENCY cURRENCY)
        {
            base.AddObject("CURRENCY", cURRENCY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LANGUAGE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLANGUAGE(LANGUAGE lANGUAGE)
        {
            base.AddObject("LANGUAGE", lANGUAGE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NOTIFICATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNOTIFICATION(NOTIFICATION nOTIFICATION)
        {
            base.AddObject("NOTIFICATION", nOTIFICATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the USER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUSER(USER uSER)
        {
            base.AddObject("USER", uSER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tool EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTool(Tool tool)
        {
            base.AddObject("Tool", tool);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandsResult EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandsResult(BrandsResult brandsResult)
        {
            base.AddObject("BrandsResult", brandsResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TOOL_RESULT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTOOL_RESULT(TOOL_RESULT tOOL_RESULT)
        {
            base.AddObject("TOOL_RESULT", tOOL_RESULT);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="BRAND")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BRAND : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BRAND object.
        /// </summary>
        /// <param name="brand_ID">Initial value of the Brand_ID property.</param>
        public static BRAND CreateBRAND(global::System.Decimal brand_ID)
        {
            BRAND bRAND = new BRAND();
            bRAND.Brand_ID = brand_ID;
            return bRAND;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Brand_ID
        {
            get
            {
                return _Brand_ID;
            }
            set
            {
                if (_Brand_ID != value)
                {
                    OnBrand_IDChanging(value);
                    ReportPropertyChanging("Brand_ID");
                    _Brand_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Brand_ID");
                    OnBrand_IDChanged();
                }
            }
        }
        private global::System.Decimal _Brand_ID;
        partial void OnBrand_IDChanging(global::System.Decimal value);
        partial void OnBrand_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brand_Name
        {
            get
            {
                return _Brand_Name;
            }
            set
            {
                OnBrand_NameChanging(value);
                ReportPropertyChanging("Brand_Name");
                _Brand_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Brand_Name");
                OnBrand_NameChanged();
            }
        }
        private global::System.String _Brand_Name;
        partial void OnBrand_NameChanging(global::System.String value);
        partial void OnBrand_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brand_Symbol
        {
            get
            {
                return _Brand_Symbol;
            }
            set
            {
                OnBrand_SymbolChanging(value);
                ReportPropertyChanging("Brand_Symbol");
                _Brand_Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Brand_Symbol");
                OnBrand_SymbolChanged();
            }
        }
        private global::System.String _Brand_Symbol;
        partial void OnBrand_SymbolChanging(global::System.String value);
        partial void OnBrand_SymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brand_Main_URL
        {
            get
            {
                return _Brand_Main_URL;
            }
            set
            {
                OnBrand_Main_URLChanging(value);
                ReportPropertyChanging("Brand_Main_URL");
                _Brand_Main_URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Brand_Main_URL");
                OnBrand_Main_URLChanged();
            }
        }
        private global::System.String _Brand_Main_URL;
        partial void OnBrand_Main_URLChanging(global::System.String value);
        partial void OnBrand_Main_URLChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_BRAND_LANGUAGE_BRAND", "BRAND_LANGUAGE")]
        public EntityCollection<BRAND_LANGUAGE> BRAND_LANGUAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BRAND_LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_BRAND", "BRAND_LANGUAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BRAND_LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_BRAND", "BRAND_LANGUAGE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_BrandsResult_BRAND1", "BrandsResult")]
        public EntityCollection<BrandsResult> BrandsResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BrandsResult>("AutomationModel.FK_BrandsResult_BRAND1", "BrandsResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BrandsResult>("AutomationModel.FK_BrandsResult_BRAND1", "BrandsResult", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="BRAND_LANGUAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BRAND_LANGUAGE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BRAND_LANGUAGE object.
        /// </summary>
        /// <param name="brand_Language_ID">Initial value of the Brand_Language_ID property.</param>
        /// <param name="brand_ID">Initial value of the Brand_ID property.</param>
        /// <param name="currency_ID">Initial value of the Currency_ID property.</param>
        /// <param name="language_ID">Initial value of the Language_ID property.</param>
        public static BRAND_LANGUAGE CreateBRAND_LANGUAGE(global::System.Decimal brand_Language_ID, global::System.Decimal brand_ID, global::System.Decimal currency_ID, global::System.Decimal language_ID)
        {
            BRAND_LANGUAGE bRAND_LANGUAGE = new BRAND_LANGUAGE();
            bRAND_LANGUAGE.Brand_Language_ID = brand_Language_ID;
            bRAND_LANGUAGE.Brand_ID = brand_ID;
            bRAND_LANGUAGE.Currency_ID = currency_ID;
            bRAND_LANGUAGE.Language_ID = language_ID;
            return bRAND_LANGUAGE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Brand_Language_ID
        {
            get
            {
                return _Brand_Language_ID;
            }
            set
            {
                if (_Brand_Language_ID != value)
                {
                    OnBrand_Language_IDChanging(value);
                    ReportPropertyChanging("Brand_Language_ID");
                    _Brand_Language_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Brand_Language_ID");
                    OnBrand_Language_IDChanged();
                }
            }
        }
        private global::System.Decimal _Brand_Language_ID;
        partial void OnBrand_Language_IDChanging(global::System.Decimal value);
        partial void OnBrand_Language_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Brand_ID
        {
            get
            {
                return _Brand_ID;
            }
            set
            {
                OnBrand_IDChanging(value);
                ReportPropertyChanging("Brand_ID");
                _Brand_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Brand_ID");
                OnBrand_IDChanged();
            }
        }
        private global::System.Decimal _Brand_ID;
        partial void OnBrand_IDChanging(global::System.Decimal value);
        partial void OnBrand_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Currency_ID
        {
            get
            {
                return _Currency_ID;
            }
            set
            {
                OnCurrency_IDChanging(value);
                ReportPropertyChanging("Currency_ID");
                _Currency_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_ID");
                OnCurrency_IDChanged();
            }
        }
        private global::System.Decimal _Currency_ID;
        partial void OnCurrency_IDChanging(global::System.Decimal value);
        partial void OnCurrency_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Language_ID
        {
            get
            {
                return _Language_ID;
            }
            set
            {
                OnLanguage_IDChanging(value);
                ReportPropertyChanging("Language_ID");
                _Language_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Language_ID");
                OnLanguage_IDChanged();
            }
        }
        private global::System.Decimal _Language_ID;
        partial void OnLanguage_IDChanging(global::System.Decimal value);
        partial void OnLanguage_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brand_Language_URL_Template
        {
            get
            {
                return _Brand_Language_URL_Template;
            }
            set
            {
                OnBrand_Language_URL_TemplateChanging(value);
                ReportPropertyChanging("Brand_Language_URL_Template");
                _Brand_Language_URL_Template = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Brand_Language_URL_Template");
                OnBrand_Language_URL_TemplateChanged();
            }
        }
        private global::System.String _Brand_Language_URL_Template;
        partial void OnBrand_Language_URL_TemplateChanging(global::System.String value);
        partial void OnBrand_Language_URL_TemplateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Brand_Language_Priority
        {
            get
            {
                return _Brand_Language_Priority;
            }
            set
            {
                OnBrand_Language_PriorityChanging(value);
                ReportPropertyChanging("Brand_Language_Priority");
                _Brand_Language_Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Brand_Language_Priority");
                OnBrand_Language_PriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _Brand_Language_Priority;
        partial void OnBrand_Language_PriorityChanging(Nullable<global::System.Int32> value);
        partial void OnBrand_Language_PriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Notification_ID
        {
            get
            {
                return _Notification_ID;
            }
            set
            {
                OnNotification_IDChanging(value);
                ReportPropertyChanging("Notification_ID");
                _Notification_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notification_ID");
                OnNotification_IDChanged();
            }
        }
        private Nullable<global::System.Decimal> _Notification_ID;
        partial void OnNotification_IDChanging(Nullable<global::System.Decimal> value);
        partial void OnNotification_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_BRAND_LANGUAGE_BRAND", "BRAND")]
        public BRAND BRAND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND>("AutomationModel.FK_BRAND_LANGUAGE_BRAND", "BRAND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND>("AutomationModel.FK_BRAND_LANGUAGE_BRAND", "BRAND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BRAND> BRANDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND>("AutomationModel.FK_BRAND_LANGUAGE_BRAND", "BRAND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BRAND>("AutomationModel.FK_BRAND_LANGUAGE_BRAND", "BRAND", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_BRAND_LANGUAGE_CURRENCY", "CURRENCY")]
        public CURRENCY CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("AutomationModel.FK_BRAND_LANGUAGE_CURRENCY", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("AutomationModel.FK_BRAND_LANGUAGE_CURRENCY", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("AutomationModel.FK_BRAND_LANGUAGE_CURRENCY", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("AutomationModel.FK_BRAND_LANGUAGE_CURRENCY", "CURRENCY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_BRAND_LANGUAGE_LANGUAGE", "LANGUAGE")]
        public LANGUAGE LANGUAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_LANGUAGE", "LANGUAGE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_LANGUAGE", "LANGUAGE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LANGUAGE> LANGUAGEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_LANGUAGE", "LANGUAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_LANGUAGE", "LANGUAGE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_NOTIFICATION_BRAND_LANGUAGE", "NOTIFICATION")]
        public EntityCollection<NOTIFICATION> NOTIFICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NOTIFICATION>("AutomationModel.FK_NOTIFICATION_BRAND_LANGUAGE", "NOTIFICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NOTIFICATION>("AutomationModel.FK_NOTIFICATION_BRAND_LANGUAGE", "NOTIFICATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_BRAND_LANGUAGE_NOTIFICATION", "NOTIFICATION")]
        public NOTIFICATION NOTIFICATION_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NOTIFICATION>("AutomationModel.FK_BRAND_LANGUAGE_NOTIFICATION", "NOTIFICATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NOTIFICATION>("AutomationModel.FK_BRAND_LANGUAGE_NOTIFICATION", "NOTIFICATION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NOTIFICATION> NOTIFICATION_1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NOTIFICATION>("AutomationModel.FK_BRAND_LANGUAGE_NOTIFICATION", "NOTIFICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NOTIFICATION>("AutomationModel.FK_BRAND_LANGUAGE_NOTIFICATION", "NOTIFICATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_Tool_BRAND_LANGUAGE", "Tool")]
        public EntityCollection<Tool> Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tool>("AutomationModel.FK_Tool_BRAND_LANGUAGE", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tool>("AutomationModel.FK_Tool_BRAND_LANGUAGE", "Tool", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="BrandsResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandsResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandsResult object.
        /// </summary>
        /// <param name="brand_Result_ID">Initial value of the Brand_Result_ID property.</param>
        /// <param name="brand_ID">Initial value of the Brand_ID property.</param>
        /// <param name="tool_Name">Initial value of the Tool_Name property.</param>
        public static BrandsResult CreateBrandsResult(global::System.Decimal brand_Result_ID, global::System.Decimal brand_ID, global::System.String tool_Name)
        {
            BrandsResult brandsResult = new BrandsResult();
            brandsResult.Brand_Result_ID = brand_Result_ID;
            brandsResult.Brand_ID = brand_ID;
            brandsResult.Tool_Name = tool_Name;
            return brandsResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Brand_Result_ID
        {
            get
            {
                return _Brand_Result_ID;
            }
            set
            {
                if (_Brand_Result_ID != value)
                {
                    OnBrand_Result_IDChanging(value);
                    ReportPropertyChanging("Brand_Result_ID");
                    _Brand_Result_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Brand_Result_ID");
                    OnBrand_Result_IDChanged();
                }
            }
        }
        private global::System.Decimal _Brand_Result_ID;
        partial void OnBrand_Result_IDChanging(global::System.Decimal value);
        partial void OnBrand_Result_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Brand_ID
        {
            get
            {
                return _Brand_ID;
            }
            set
            {
                OnBrand_IDChanging(value);
                ReportPropertyChanging("Brand_ID");
                _Brand_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Brand_ID");
                OnBrand_IDChanged();
            }
        }
        private global::System.Decimal _Brand_ID;
        partial void OnBrand_IDChanging(global::System.Decimal value);
        partial void OnBrand_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tool_Name
        {
            get
            {
                return _Tool_Name;
            }
            set
            {
                OnTool_NameChanging(value);
                ReportPropertyChanging("Tool_Name");
                _Tool_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tool_Name");
                OnTool_NameChanged();
            }
        }
        private global::System.String _Tool_Name;
        partial void OnTool_NameChanging(global::System.String value);
        partial void OnTool_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Tool_Result
        {
            get
            {
                return _Tool_Result;
            }
            set
            {
                OnTool_ResultChanging(value);
                ReportPropertyChanging("Tool_Result");
                _Tool_Result = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tool_Result");
                OnTool_ResultChanged();
            }
        }
        private Nullable<global::System.Boolean> _Tool_Result;
        partial void OnTool_ResultChanging(Nullable<global::System.Boolean> value);
        partial void OnTool_ResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Tool_last_Run_Date
        {
            get
            {
                return _Tool_last_Run_Date;
            }
            set
            {
                OnTool_last_Run_DateChanging(value);
                ReportPropertyChanging("Tool_last_Run_Date");
                _Tool_last_Run_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tool_last_Run_Date");
                OnTool_last_Run_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Tool_last_Run_Date;
        partial void OnTool_last_Run_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnTool_last_Run_DateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_BrandsResult_BRAND1", "BRAND")]
        public BRAND BRAND
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND>("AutomationModel.FK_BrandsResult_BRAND1", "BRAND").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND>("AutomationModel.FK_BrandsResult_BRAND1", "BRAND").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BRAND> BRANDReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND>("AutomationModel.FK_BrandsResult_BRAND1", "BRAND");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BRAND>("AutomationModel.FK_BrandsResult_BRAND1", "BRAND", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="CURRENCY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CURRENCY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CURRENCY object.
        /// </summary>
        /// <param name="currency_ID">Initial value of the Currency_ID property.</param>
        public static CURRENCY CreateCURRENCY(global::System.Decimal currency_ID)
        {
            CURRENCY cURRENCY = new CURRENCY();
            cURRENCY.Currency_ID = currency_ID;
            return cURRENCY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Currency_ID
        {
            get
            {
                return _Currency_ID;
            }
            set
            {
                if (_Currency_ID != value)
                {
                    OnCurrency_IDChanging(value);
                    ReportPropertyChanging("Currency_ID");
                    _Currency_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Currency_ID");
                    OnCurrency_IDChanged();
                }
            }
        }
        private global::System.Decimal _Currency_ID;
        partial void OnCurrency_IDChanging(global::System.Decimal value);
        partial void OnCurrency_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_Symbol
        {
            get
            {
                return _Currency_Symbol;
            }
            set
            {
                OnCurrency_SymbolChanging(value);
                ReportPropertyChanging("Currency_Symbol");
                _Currency_Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_Symbol");
                OnCurrency_SymbolChanged();
            }
        }
        private global::System.String _Currency_Symbol;
        partial void OnCurrency_SymbolChanging(global::System.String value);
        partial void OnCurrency_SymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency_Code
        {
            get
            {
                return _Currency_Code;
            }
            set
            {
                OnCurrency_CodeChanging(value);
                ReportPropertyChanging("Currency_Code");
                _Currency_Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency_Code");
                OnCurrency_CodeChanged();
            }
        }
        private global::System.String _Currency_Code;
        partial void OnCurrency_CodeChanging(global::System.String value);
        partial void OnCurrency_CodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_BRAND_LANGUAGE_CURRENCY", "BRAND_LANGUAGE")]
        public EntityCollection<BRAND_LANGUAGE> BRAND_LANGUAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BRAND_LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_CURRENCY", "BRAND_LANGUAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BRAND_LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_CURRENCY", "BRAND_LANGUAGE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_LANGUAGE_CURRENCY", "LANGUAGE")]
        public EntityCollection<LANGUAGE> LANGUAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LANGUAGE>("AutomationModel.FK_LANGUAGE_CURRENCY", "LANGUAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LANGUAGE>("AutomationModel.FK_LANGUAGE_CURRENCY", "LANGUAGE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="LANGUAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LANGUAGE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LANGUAGE object.
        /// </summary>
        /// <param name="language_ID">Initial value of the Language_ID property.</param>
        /// <param name="currency_ID">Initial value of the Currency_ID property.</param>
        public static LANGUAGE CreateLANGUAGE(global::System.Decimal language_ID, global::System.Decimal currency_ID)
        {
            LANGUAGE lANGUAGE = new LANGUAGE();
            lANGUAGE.Language_ID = language_ID;
            lANGUAGE.Currency_ID = currency_ID;
            return lANGUAGE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Language_ID
        {
            get
            {
                return _Language_ID;
            }
            set
            {
                if (_Language_ID != value)
                {
                    OnLanguage_IDChanging(value);
                    ReportPropertyChanging("Language_ID");
                    _Language_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Language_ID");
                    OnLanguage_IDChanged();
                }
            }
        }
        private global::System.Decimal _Language_ID;
        partial void OnLanguage_IDChanging(global::System.Decimal value);
        partial void OnLanguage_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language_Symbol
        {
            get
            {
                return _Language_Symbol;
            }
            set
            {
                OnLanguage_SymbolChanging(value);
                ReportPropertyChanging("Language_Symbol");
                _Language_Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language_Symbol");
                OnLanguage_SymbolChanged();
            }
        }
        private global::System.String _Language_Symbol;
        partial void OnLanguage_SymbolChanging(global::System.String value);
        partial void OnLanguage_SymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language_Name
        {
            get
            {
                return _Language_Name;
            }
            set
            {
                OnLanguage_NameChanging(value);
                ReportPropertyChanging("Language_Name");
                _Language_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language_Name");
                OnLanguage_NameChanged();
            }
        }
        private global::System.String _Language_Name;
        partial void OnLanguage_NameChanging(global::System.String value);
        partial void OnLanguage_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language_Browser_Accept_Langauge
        {
            get
            {
                return _Language_Browser_Accept_Langauge;
            }
            set
            {
                OnLanguage_Browser_Accept_LangaugeChanging(value);
                ReportPropertyChanging("Language_Browser_Accept_Langauge");
                _Language_Browser_Accept_Langauge = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language_Browser_Accept_Langauge");
                OnLanguage_Browser_Accept_LangaugeChanged();
            }
        }
        private global::System.String _Language_Browser_Accept_Langauge;
        partial void OnLanguage_Browser_Accept_LangaugeChanging(global::System.String value);
        partial void OnLanguage_Browser_Accept_LangaugeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Currency_ID
        {
            get
            {
                return _Currency_ID;
            }
            set
            {
                OnCurrency_IDChanging(value);
                ReportPropertyChanging("Currency_ID");
                _Currency_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency_ID");
                OnCurrency_IDChanged();
            }
        }
        private global::System.Decimal _Currency_ID;
        partial void OnCurrency_IDChanging(global::System.Decimal value);
        partial void OnCurrency_IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_BRAND_LANGUAGE_LANGUAGE", "BRAND_LANGUAGE")]
        public EntityCollection<BRAND_LANGUAGE> BRAND_LANGUAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BRAND_LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_LANGUAGE", "BRAND_LANGUAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BRAND_LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_LANGUAGE", "BRAND_LANGUAGE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_LANGUAGE_CURRENCY", "CURRENCY")]
        public CURRENCY CURRENCY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("AutomationModel.FK_LANGUAGE_CURRENCY", "CURRENCY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("AutomationModel.FK_LANGUAGE_CURRENCY", "CURRENCY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CURRENCY> CURRENCYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CURRENCY>("AutomationModel.FK_LANGUAGE_CURRENCY", "CURRENCY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CURRENCY>("AutomationModel.FK_LANGUAGE_CURRENCY", "CURRENCY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="NOTIFICATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NOTIFICATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NOTIFICATION object.
        /// </summary>
        /// <param name="notification_ID">Initial value of the Notification_ID property.</param>
        /// <param name="brand_Language_ID">Initial value of the Brand_Language_ID property.</param>
        /// <param name="user_ID">Initial value of the User_ID property.</param>
        public static NOTIFICATION CreateNOTIFICATION(global::System.Decimal notification_ID, global::System.Decimal brand_Language_ID, global::System.Decimal user_ID)
        {
            NOTIFICATION nOTIFICATION = new NOTIFICATION();
            nOTIFICATION.Notification_ID = notification_ID;
            nOTIFICATION.Brand_Language_ID = brand_Language_ID;
            nOTIFICATION.User_ID = user_ID;
            return nOTIFICATION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Notification_ID
        {
            get
            {
                return _Notification_ID;
            }
            set
            {
                if (_Notification_ID != value)
                {
                    OnNotification_IDChanging(value);
                    ReportPropertyChanging("Notification_ID");
                    _Notification_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Notification_ID");
                    OnNotification_IDChanged();
                }
            }
        }
        private global::System.Decimal _Notification_ID;
        partial void OnNotification_IDChanging(global::System.Decimal value);
        partial void OnNotification_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Brand_Language_ID
        {
            get
            {
                return _Brand_Language_ID;
            }
            set
            {
                OnBrand_Language_IDChanging(value);
                ReportPropertyChanging("Brand_Language_ID");
                _Brand_Language_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Brand_Language_ID");
                OnBrand_Language_IDChanged();
            }
        }
        private global::System.Decimal _Brand_Language_ID;
        partial void OnBrand_Language_IDChanging(global::System.Decimal value);
        partial void OnBrand_Language_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal User_ID
        {
            get
            {
                return _User_ID;
            }
            set
            {
                OnUser_IDChanging(value);
                ReportPropertyChanging("User_ID");
                _User_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("User_ID");
                OnUser_IDChanged();
            }
        }
        private global::System.Decimal _User_ID;
        partial void OnUser_IDChanging(global::System.Decimal value);
        partial void OnUser_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Notification_Send_SMS
        {
            get
            {
                return _Notification_Send_SMS;
            }
            set
            {
                OnNotification_Send_SMSChanging(value);
                ReportPropertyChanging("Notification_Send_SMS");
                _Notification_Send_SMS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notification_Send_SMS");
                OnNotification_Send_SMSChanged();
            }
        }
        private Nullable<global::System.Boolean> _Notification_Send_SMS;
        partial void OnNotification_Send_SMSChanging(Nullable<global::System.Boolean> value);
        partial void OnNotification_Send_SMSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Notification_Send_Mail
        {
            get
            {
                return _Notification_Send_Mail;
            }
            set
            {
                OnNotification_Send_MailChanging(value);
                ReportPropertyChanging("Notification_Send_Mail");
                _Notification_Send_Mail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notification_Send_Mail");
                OnNotification_Send_MailChanged();
            }
        }
        private Nullable<global::System.Boolean> _Notification_Send_Mail;
        partial void OnNotification_Send_MailChanging(Nullable<global::System.Boolean> value);
        partial void OnNotification_Send_MailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_NOTIFICATION_BRAND_LANGUAGE", "BRAND_LANGUAGE")]
        public BRAND_LANGUAGE BRAND_LANGUAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND_LANGUAGE>("AutomationModel.FK_NOTIFICATION_BRAND_LANGUAGE", "BRAND_LANGUAGE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND_LANGUAGE>("AutomationModel.FK_NOTIFICATION_BRAND_LANGUAGE", "BRAND_LANGUAGE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BRAND_LANGUAGE> BRAND_LANGUAGEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND_LANGUAGE>("AutomationModel.FK_NOTIFICATION_BRAND_LANGUAGE", "BRAND_LANGUAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BRAND_LANGUAGE>("AutomationModel.FK_NOTIFICATION_BRAND_LANGUAGE", "BRAND_LANGUAGE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_NOTIFICATION_USER", "USER")]
        public USER USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("AutomationModel.FK_NOTIFICATION_USER", "USER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("AutomationModel.FK_NOTIFICATION_USER", "USER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<USER> USERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("AutomationModel.FK_NOTIFICATION_USER", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<USER>("AutomationModel.FK_NOTIFICATION_USER", "USER", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_BRAND_LANGUAGE_NOTIFICATION", "BRAND_LANGUAGE")]
        public EntityCollection<BRAND_LANGUAGE> BRAND_LANGUAGE_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BRAND_LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_NOTIFICATION", "BRAND_LANGUAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BRAND_LANGUAGE>("AutomationModel.FK_BRAND_LANGUAGE_NOTIFICATION", "BRAND_LANGUAGE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnnameChanging(value);
                    ReportPropertyChanging("name");
                    _name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("name");
                    OnnameChanged();
                }
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                if (_principal_id != value)
                {
                    Onprincipal_idChanging(value);
                    ReportPropertyChanging("principal_id");
                    _principal_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("principal_id");
                    Onprincipal_idChanged();
                }
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="Tool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tool : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tool object.
        /// </summary>
        /// <param name="tool_ID">Initial value of the Tool_ID property.</param>
        /// <param name="brand_Language_ID">Initial value of the Brand_Language_ID property.</param>
        public static Tool CreateTool(global::System.Decimal tool_ID, global::System.Decimal brand_Language_ID)
        {
            Tool tool = new Tool();
            tool.Tool_ID = tool_ID;
            tool.Brand_Language_ID = brand_Language_ID;
            return tool;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Tool_ID
        {
            get
            {
                return _Tool_ID;
            }
            set
            {
                if (_Tool_ID != value)
                {
                    OnTool_IDChanging(value);
                    ReportPropertyChanging("Tool_ID");
                    _Tool_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Tool_ID");
                    OnTool_IDChanged();
                }
            }
        }
        private global::System.Decimal _Tool_ID;
        partial void OnTool_IDChanging(global::System.Decimal value);
        partial void OnTool_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Brand_Language_ID
        {
            get
            {
                return _Brand_Language_ID;
            }
            set
            {
                OnBrand_Language_IDChanging(value);
                ReportPropertyChanging("Brand_Language_ID");
                _Brand_Language_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Brand_Language_ID");
                OnBrand_Language_IDChanged();
            }
        }
        private global::System.Decimal _Brand_Language_ID;
        partial void OnBrand_Language_IDChanging(global::System.Decimal value);
        partial void OnBrand_Language_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tool_Name
        {
            get
            {
                return _Tool_Name;
            }
            set
            {
                OnTool_NameChanging(value);
                ReportPropertyChanging("Tool_Name");
                _Tool_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tool_Name");
                OnTool_NameChanged();
            }
        }
        private global::System.String _Tool_Name;
        partial void OnTool_NameChanging(global::System.String value);
        partial void OnTool_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tool_Type
        {
            get
            {
                return _Tool_Type;
            }
            set
            {
                OnTool_TypeChanging(value);
                ReportPropertyChanging("Tool_Type");
                _Tool_Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tool_Type");
                OnTool_TypeChanged();
            }
        }
        private global::System.String _Tool_Type;
        partial void OnTool_TypeChanging(global::System.String value);
        partial void OnTool_TypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tool_Description
        {
            get
            {
                return _Tool_Description;
            }
            set
            {
                OnTool_DescriptionChanging(value);
                ReportPropertyChanging("Tool_Description");
                _Tool_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tool_Description");
                OnTool_DescriptionChanged();
            }
        }
        private global::System.String _Tool_Description;
        partial void OnTool_DescriptionChanging(global::System.String value);
        partial void OnTool_DescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tool_SMS_Message_Format
        {
            get
            {
                return _Tool_SMS_Message_Format;
            }
            set
            {
                OnTool_SMS_Message_FormatChanging(value);
                ReportPropertyChanging("Tool_SMS_Message_Format");
                _Tool_SMS_Message_Format = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tool_SMS_Message_Format");
                OnTool_SMS_Message_FormatChanged();
            }
        }
        private global::System.String _Tool_SMS_Message_Format;
        partial void OnTool_SMS_Message_FormatChanging(global::System.String value);
        partial void OnTool_SMS_Message_FormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tool_Email_Message_Format
        {
            get
            {
                return _Tool_Email_Message_Format;
            }
            set
            {
                OnTool_Email_Message_FormatChanging(value);
                ReportPropertyChanging("Tool_Email_Message_Format");
                _Tool_Email_Message_Format = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tool_Email_Message_Format");
                OnTool_Email_Message_FormatChanged();
            }
        }
        private global::System.String _Tool_Email_Message_Format;
        partial void OnTool_Email_Message_FormatChanging(global::System.String value);
        partial void OnTool_Email_Message_FormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tool_Argument
        {
            get
            {
                return _Tool_Argument;
            }
            set
            {
                OnTool_ArgumentChanging(value);
                ReportPropertyChanging("Tool_Argument");
                _Tool_Argument = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tool_Argument");
                OnTool_ArgumentChanged();
            }
        }
        private global::System.String _Tool_Argument;
        partial void OnTool_ArgumentChanging(global::System.String value);
        partial void OnTool_ArgumentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tool_FilePath
        {
            get
            {
                return _Tool_FilePath;
            }
            set
            {
                OnTool_FilePathChanging(value);
                ReportPropertyChanging("Tool_FilePath");
                _Tool_FilePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tool_FilePath");
                OnTool_FilePathChanged();
            }
        }
        private global::System.String _Tool_FilePath;
        partial void OnTool_FilePathChanging(global::System.String value);
        partial void OnTool_FilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tool_IPAddress
        {
            get
            {
                return _Tool_IPAddress;
            }
            set
            {
                OnTool_IPAddressChanging(value);
                ReportPropertyChanging("Tool_IPAddress");
                _Tool_IPAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tool_IPAddress");
                OnTool_IPAddressChanged();
            }
        }
        private global::System.String _Tool_IPAddress;
        partial void OnTool_IPAddressChanging(global::System.String value);
        partial void OnTool_IPAddressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_Tool_BRAND_LANGUAGE", "BRAND_LANGUAGE")]
        public BRAND_LANGUAGE BRAND_LANGUAGE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND_LANGUAGE>("AutomationModel.FK_Tool_BRAND_LANGUAGE", "BRAND_LANGUAGE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND_LANGUAGE>("AutomationModel.FK_Tool_BRAND_LANGUAGE", "BRAND_LANGUAGE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BRAND_LANGUAGE> BRAND_LANGUAGEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BRAND_LANGUAGE>("AutomationModel.FK_Tool_BRAND_LANGUAGE", "BRAND_LANGUAGE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BRAND_LANGUAGE>("AutomationModel.FK_Tool_BRAND_LANGUAGE", "BRAND_LANGUAGE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_TOOL_RESULT_Tool", "TOOL_RESULT")]
        public EntityCollection<TOOL_RESULT> TOOL_RESULT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TOOL_RESULT>("AutomationModel.FK_TOOL_RESULT_Tool", "TOOL_RESULT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TOOL_RESULT>("AutomationModel.FK_TOOL_RESULT_Tool", "TOOL_RESULT", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="TOOL_RESULT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TOOL_RESULT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TOOL_RESULT object.
        /// </summary>
        /// <param name="tool_Result_ID">Initial value of the Tool_Result_ID property.</param>
        /// <param name="tool_ID">Initial value of the Tool_ID property.</param>
        public static TOOL_RESULT CreateTOOL_RESULT(global::System.Decimal tool_Result_ID, global::System.Decimal tool_ID)
        {
            TOOL_RESULT tOOL_RESULT = new TOOL_RESULT();
            tOOL_RESULT.Tool_Result_ID = tool_Result_ID;
            tOOL_RESULT.Tool_ID = tool_ID;
            return tOOL_RESULT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Tool_Result_ID
        {
            get
            {
                return _Tool_Result_ID;
            }
            set
            {
                if (_Tool_Result_ID != value)
                {
                    OnTool_Result_IDChanging(value);
                    ReportPropertyChanging("Tool_Result_ID");
                    _Tool_Result_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Tool_Result_ID");
                    OnTool_Result_IDChanged();
                }
            }
        }
        private global::System.Decimal _Tool_Result_ID;
        partial void OnTool_Result_IDChanging(global::System.Decimal value);
        partial void OnTool_Result_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Tool_ID
        {
            get
            {
                return _Tool_ID;
            }
            set
            {
                OnTool_IDChanging(value);
                ReportPropertyChanging("Tool_ID");
                _Tool_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tool_ID");
                OnTool_IDChanged();
            }
        }
        private global::System.Decimal _Tool_ID;
        partial void OnTool_IDChanging(global::System.Decimal value);
        partial void OnTool_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Tool_Result_Result
        {
            get
            {
                return _Tool_Result_Result;
            }
            set
            {
                OnTool_Result_ResultChanging(value);
                ReportPropertyChanging("Tool_Result_Result");
                _Tool_Result_Result = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tool_Result_Result");
                OnTool_Result_ResultChanged();
            }
        }
        private Nullable<global::System.Boolean> _Tool_Result_Result;
        partial void OnTool_Result_ResultChanging(Nullable<global::System.Boolean> value);
        partial void OnTool_Result_ResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tool_Result_Description
        {
            get
            {
                return _Tool_Result_Description;
            }
            set
            {
                OnTool_Result_DescriptionChanging(value);
                ReportPropertyChanging("Tool_Result_Description");
                _Tool_Result_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tool_Result_Description");
                OnTool_Result_DescriptionChanged();
            }
        }
        private global::System.String _Tool_Result_Description;
        partial void OnTool_Result_DescriptionChanging(global::System.String value);
        partial void OnTool_Result_DescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Tool_Result_Last_Pass_Date
        {
            get
            {
                return _Tool_Result_Last_Pass_Date;
            }
            set
            {
                OnTool_Result_Last_Pass_DateChanging(value);
                ReportPropertyChanging("Tool_Result_Last_Pass_Date");
                _Tool_Result_Last_Pass_Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tool_Result_Last_Pass_Date");
                OnTool_Result_Last_Pass_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Tool_Result_Last_Pass_Date;
        partial void OnTool_Result_Last_Pass_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnTool_Result_Last_Pass_DateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_TOOL_RESULT_Tool", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("AutomationModel.FK_TOOL_RESULT_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("AutomationModel.FK_TOOL_RESULT_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("AutomationModel.FK_TOOL_RESULT_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("AutomationModel.FK_TOOL_RESULT_Tool", "Tool", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutomationModel", Name="USER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new USER object.
        /// </summary>
        /// <param name="user_ID">Initial value of the User_ID property.</param>
        public static USER CreateUSER(global::System.Decimal user_ID)
        {
            USER uSER = new USER();
            uSER.User_ID = user_ID;
            return uSER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal User_ID
        {
            get
            {
                return _User_ID;
            }
            set
            {
                if (_User_ID != value)
                {
                    OnUser_IDChanging(value);
                    ReportPropertyChanging("User_ID");
                    _User_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("User_ID");
                    OnUser_IDChanged();
                }
            }
        }
        private global::System.Decimal _User_ID;
        partial void OnUser_IDChanging(global::System.Decimal value);
        partial void OnUser_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User_First_Name
        {
            get
            {
                return _User_First_Name;
            }
            set
            {
                OnUser_First_NameChanging(value);
                ReportPropertyChanging("User_First_Name");
                _User_First_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("User_First_Name");
                OnUser_First_NameChanged();
            }
        }
        private global::System.String _User_First_Name;
        partial void OnUser_First_NameChanging(global::System.String value);
        partial void OnUser_First_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User_Last_Name
        {
            get
            {
                return _User_Last_Name;
            }
            set
            {
                OnUser_Last_NameChanging(value);
                ReportPropertyChanging("User_Last_Name");
                _User_Last_Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("User_Last_Name");
                OnUser_Last_NameChanged();
            }
        }
        private global::System.String _User_Last_Name;
        partial void OnUser_Last_NameChanging(global::System.String value);
        partial void OnUser_Last_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User_Email_Address
        {
            get
            {
                return _User_Email_Address;
            }
            set
            {
                OnUser_Email_AddressChanging(value);
                ReportPropertyChanging("User_Email_Address");
                _User_Email_Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("User_Email_Address");
                OnUser_Email_AddressChanged();
            }
        }
        private global::System.String _User_Email_Address;
        partial void OnUser_Email_AddressChanging(global::System.String value);
        partial void OnUser_Email_AddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User_Mobile_Address
        {
            get
            {
                return _User_Mobile_Address;
            }
            set
            {
                OnUser_Mobile_AddressChanging(value);
                ReportPropertyChanging("User_Mobile_Address");
                _User_Mobile_Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("User_Mobile_Address");
                OnUser_Mobile_AddressChanged();
            }
        }
        private global::System.String _User_Mobile_Address;
        partial void OnUser_Mobile_AddressChanging(global::System.String value);
        partial void OnUser_Mobile_AddressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutomationModel", "FK_NOTIFICATION_USER", "NOTIFICATION")]
        public EntityCollection<NOTIFICATION> NOTIFICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NOTIFICATION>("AutomationModel.FK_NOTIFICATION_USER", "NOTIFICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NOTIFICATION>("AutomationModel.FK_NOTIFICATION_USER", "NOTIFICATION", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
